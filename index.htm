<!DOCTYPE html>
<html>

<head>
    <style>
        body {
            background-color: lightblue;
        }

        h1 {
            color: white;

        }

        p {
            font-family: verdana;
            font-size: 20px;
        }

        label {
            text-align: center;
        }

        input {
            text-align: center;
        }

        div.minimalistBlack {
            border: 3px solid #000000;
            width: 80%;
            text-align: left;
            border-collapse: collapse;
        }

        .divTable.minimalistBlack .divTableCell,
        .divTable.minimalistBlack .divTableHead {
            border: 1px solid #000000;
            padding: 5px 4px;
        }

        .divTable.minimalistBlack .divTableBody .divTableCell {
            font-size: 13px;
        }

        .divTable.minimalistBlack .divTableHeading {
            background: #CFCFCF;
            background: -moz-linear-gradient(top, #dbdbdb 0%, #d3d3d3 66%, #CFCFCF 100%);
            background: -webkit-linear-gradient(top, #dbdbdb 0%, #d3d3d3 66%, #CFCFCF 100%);
            background: linear-gradient(to bottom, #dbdbdb 0%, #d3d3d3 66%, #CFCFCF 100%);
            border-bottom: 3px solid #000000;
        }

        .divTable.minimalistBlack .divTableHeading .divTableHead {
            font-size: 15px;
            font-weight: bold;
            color: #000000;
            text-align: left;
        }

        .minimalistBlack .tableFootStyle {
            font-size: 14px;
            font-weight: bold;
            color: #000000;
            border-top: 3px solid #000000;
        }

        .minimalistBlack .tableFootStyle {
            font-size: 14px;
        }

        /* DivTable.com */
        .divTable {
            display: table;
        }

        .divTableRow {
            display: table-row;
        }

        .divTableHeading {
            display: table-header-group;
        }

        .divTableCell,
        .divTableHead {
            display: table-cell;
        }

        .divTableHeading {
            display: table-header-group;
        }

        .divTableFoot {
            display: table-footer-group;
        }

        .divTableBody {
            display: table-row-group;
        }
    </style>
</head>
<title>日文50音發音測驗</title>

<body onload="init()">
    <h1>
        <p id='question'></p>
    </h1>
    <p><label for="answer">發音:</label>
        <input type="text" id="answer" name="answer">
        <button onclick="sumit()">送出</button>
    </p>
    <p><label for="filter">設定:</label>
        <input type="checkbox" id="hiragana" name="hiragana" value="hiragana" checked=true
            onClick="randomQuestion();showQuestion(false);">
        <label for="hiragana">平假名</label>
        <input type="checkbox" id="katakana" name="katakana" value="katakana"
            onClick="randomQuestion();showQuestion(false);">
        <label for="katakana">片假名</label>
        <input type="checkbox" id="voiced" name="voiced" value="voiced" disabled=true>
        <label for="voiced">濁音</label>
        <input type="checkbox" id="half-voiced" name="half-voiced" value="half-voiced" disabled=true>
        <label for="half-voiced">半濁音</label>
    </p>
    <div class="divTable minimalistBlack">
        <div class="divTableHeading">
            <div class="divTableRow">
                <div class="divTableHead">題目</div>
                <div class="divTableHead">檢定</div>
                <div class="divTableHead">作答</div>
                <div class="divTableHead">解答</div>
                <div class="divTableHead">時間</div>
            </div>
        </div>
        <div class="divTableBody" id='test_record'>
            <div class="divTableRow">
                <div class="divTableCell"></div>
                <div class="divTableCell"></div>
                <div class="divTableCell"></div>
                <div class="divTableCell"></div>
                <div class="divTableCell"></div>
            </div>
        </div>
    </div>

</body>

<script>
    var voiceless_hiragana_char = ['あ', 'い', 'う', 'え', 'お', 'か', 'き', 'く', 'け', 'こ', 'さ', 'し', 'す', 'せ', 'そ', 'た', 'ち', 'つ', 'て', 'と', 'な', 'に', 'ぬ', 'ね', 'の', 'は', 'ひ', 'ふ', 'へ', 'ほ', 'ま', 'み', 'む', 'め', 'も', 'や', 'ゆ', 'よ', 'ら', 'り', 'る', 'れ', 'ろ', 'わ', 'を', 'ん'];
    var voiceless_katakana_char = ['ア', 'イ', 'ウ', 'エ', 'オ', 'カ', 'キ', 'ク', 'ケ', 'コ', 'サ', 'シ', 'ス', 'セ', 'ソ', 'タ', 'チ', 'ツ', 'テ', 'ト', 'ナ', 'ニ', 'ヌ', 'ネ', 'ノ', 'ハ', 'ヒ', 'フ', 'ヘ', 'ホ', 'マ', 'ミ', 'ム', 'メ', 'モ', 'ヤ', 'ユ', 'ヨ', 'ラ', 'リ', 'ル', 'レ', 'ロ', 'ワ', 'ヲ', 'ン'];
    var voiceless_tone = ['a', 'i', 'u', 'e', 'o', 'ka', 'ki', 'ku', 'ke', 'ko', 'sa', 'shi', 'su', 'se', 'so', 'ta', 'chi', 'tsu', 'te', 'to', 'na', 'ni', 'nu', 'ne', 'no', 'ha', 'hi', 'fu', 'he', 'ho', 'ma', 'mi', 'mu', 'me', 'mo', 'ya', 'yu', 'yo', 'ra', 'ri', 'ru', 're', 'ro', 'wa', 'wo', 'n'];
    var voice_hiragana_char = ['が', 'ぎ', 'ぐ', 'げ', 'ご', 'ざ', 'じ', 'ず', 'ぜ', 'ぞ', 'だ', 'ぢ', 'づ', 'で', 'ど', 'ば', 'び', 'ぶ', 'べ', 'ぼ'];
    var voice_katakana_char = ['ガ', 'ギ', 'グ', 'ゲ', 'ゴ', 'ザ', 'ジ', 'ズ', 'ゼ', 'ゾ', 'ダ', 'ヂ', 'ヅ', 'デ', 'ド', 'バ', 'ビ', 'ブ', 'ベ', 'ボ'];
    var voice_tone = ['ga', 'gi', 'gu', 'ge', 'go', 'za', 'zi', 'zu', 'ze', 'zo', 'da', 'di', 'du', 'de', 'do'];
    var half_voice_hiragana_char = ['ぱ', 'ぴ', 'ぷ', 'ぺ', 'ぽ'];
    var half_voice_katakana_char = ['パ', 'ピ', 'プ', 'ペ', 'ポ'];
    var half_voice_tone = ['ba', 'bi', 'bu', 'be', 'bo'];
    var recordHTML = '';
    var currentQuestionIndex = 0;
    var questionIndexList = [];
    var passCount = 0;
    var failCount = 0;

    function init() {
        randomQuestion();
        showQuestion(false);
    }

    // return 0~ <= maxNumber array once
    function randomRangnArrayOnce(maxNumber) {
        var ret = [];
        while (ret.length < maxNumber) {
            let number = Math.floor(Math.random() * maxNumber);
            let isTheSame = false;
            for (let i = 0; i < ret.length; i++) {
                if (ret[i] == number) {
                    isTheSame = true;
                    break;
                }
            }
            if (!isTheSame) {
                ret.push(number);
            }
        }
        return ret;
    }

    function randomQuestion() {
        currentQuestionIndex = 0;
        questionIndexList = randomRangnArrayOnce(hiragana_char.length);
        passCount = 0;
        failCount = 0;
    }

    function showQuestion(next) {
        // auto add one if need.
        if (next) {
            if (currentQuestionIndex < hiragana_char.length - 1) {
                currentQuestionIndex++;
            }
            else { //if max index , auto reset to zero.
                alert("測試完成，錯誤" + failCount + "題，正確率:" + (passCount / (passCount + failCount) * 100.0).toFixed(2) + "%");
                randomQuestion();
            }
        }
        let hiragana = document.getElementById("hiragana");
        let katakana = document.getElementById("katakana");
        let question = document.getElementById("question");
        let index = questionIndexList[currentQuestionIndex];
        question.textContent = (hiragana.checked ? hiragana_char[index] : '') + (katakana.checked ? katakana_char[index] : '') + "(" + (currentQuestionIndex + 1) + ")";
    }


    function clearAnswer() {
        let answer = document.getElementById("answer");
        answer.value = '';
    }

    function compareStringNoCase(string1, string2) {
        return (string1.toLowerCase() === string2.toLowerCase());
    }

    function sumit() {
        let answer = document.getElementById("answer");
        let test_record = document.getElementById("test_record");
        let question = document.getElementById("question");
        let index = questionIndexList[currentQuestionIndex];

        let log = "<div class='divTableRow'>";
        log += "<div class='divTableCell'>" + question.textContent + "</div>";

        if (compareStringNoCase(answer.value, tone_char[index])) {

            log += "<div class='divTableCell'>" + "<p style='color:green;'>Pass</p>" + "</div>";
            passCount++;
        }
        else {
            log += "<div class='divTableCell'>" + "<p style='color:red;'>Fail</p>" + "</div>";
            failCount++;
        }

        log += "<div class='divTableCell'>" + answer.value + "</div>";
        log += "<div class='divTableCell'>" + tone_char[index] + "</div>";
        let date = new Date();
        log += "<div class='divTableCell'>" + date.getHours().toString().padStart(2, '0') + ":" + date.getMinutes().toString().padStart(2, '0') + ":" + date.getSeconds().toString().padStart(2, '0') + "</div>";
        log += "</div>";
        recordHTML = log + recordHTML;

        test_record.innerHTML = recordHTML;
        clearAnswer();
        showQuestion(true);
    }
</script>

</html>